% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edges_weights_vector.R
\name{edges_weights_vector}
\alias{edges_weights_vector}
\title{Create an edges weights vector}
\usage{
edges_weights_vector(x, y)
}
\arguments{
\item{x}{a \code{list} of length 2. The nodes_by_edges matrix returned by
\code{nodes_by_edges_matrix()} or \code{\link[adespatial:aem.build.binary]{adespatial::aem.build.binary()}}.}

\item{y}{a \code{data.frame} with the following three columns: \code{from}
(the first node of the edge), \code{to} (the second node of the edge), and
\code{weight} (the weight of the edge between the two nodes, e.g. a distance).}
}
\value{
An edges weights \code{vector}.
}
\description{
Creates an edges weights vector that can be used in \code{\link[adespatial:aem]{adespatial::aem()}}.
Resulting edges weights equal to 0 will be replaced by \verb{4 x max(w)},
where \code{max(w)} is the maximal weight in the matrix.
}
\examples{
# Import Adour sites ----
path_to_file <- system.file("extdata", "adour_sites_coords.csv", 
                            package = "bridge")
adour_sites  <- read.csv(path_to_file)

# Convert sites to sf object (POINTS) ----
adour_sites_sf <- sf::st_as_sf(adour_sites, coords = 2:3, crs = "epsg:2154")

# Retrieve nodes (from nodes vector) ----
adour_nodes <- nodes_list(adour_sites$"site")

# Find edges with 1 degree of neighborhood ----
adour_edges <- edges_list(adour_nodes, directed = TRUE)

# Create nodes-by-edges matrix ----
adour_matrix <- nodes_by_edges_matrix(adour_edges)

# Compute Euclidean distances between pairs of sites ----
adour_dists <- distance_euclidean(adour_sites_sf)

# Create Edges weights vector ----
edges_weights_vector(adour_matrix, adour_dists)
}
