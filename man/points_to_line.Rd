% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/points_to_line.R
\name{points_to_line}
\alias{points_to_line}
\title{Convert POINTS to a LINESTRING}
\usage{
points_to_line(points_sf, from, to)
}
\arguments{
\item{points_sf}{an \code{sf} object of type \code{POINT}. Typically points sampled on
a LINESTRING as the output of \code{\link[=line_to_points]{line_to_points()}}.}

\item{from}{an \code{integer} of length 1. The start of the segment (row number in
\code{points_sf}).}

\item{to}{an \code{integer} of length 1. The end of the segment (row number in
\code{points_sf}).}
}
\description{
Converts spatial points of type \code{POINT} into a \code{LINESTRING}. This function
is used by the function \code{\link[=distance_along]{distance_along()}} and is the opposite of
\code{\link[=line_to_points]{line_to_points()}}.
}
\examples{
\dontrun{
## Import Adour river (LINESTRING) ----

path_to_file <- system.file("extdata", "adour_lambert93.gpkg", 
                            package = "bridge")
                            
adour_river <- sf::st_read(path_to_file)


## Sample points of the Adour river ----

adour_river_pts <- line_to_points(adour_river)


## Convert back points to LINESTRING ----

adour_river_all <- points_to_line(adour_river_pts, 1, nrow(adour_river_pts))


## Extract on segment on the river ----

adour_river_seg <- points_to_line(adour_river_pts, 100, 350)


## Map ----

plot(sf::st_geometry(adour_river))
plot(sf::st_geometry(adour_river_all), add = TRUE, col = "red")
plot(sf::st_geometry(adour_river_seg), add = TRUE, col = "blue", lwd = 2)
}
}
