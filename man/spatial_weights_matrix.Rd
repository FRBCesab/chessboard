% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_weights_matrix.R
\name{spatial_weights_matrix}
\alias{spatial_weights_matrix}
\title{Create a spatial weights matrix}
\usage{
spatial_weights_matrix(x, y)
}
\arguments{
\item{x}{an adjacency \code{matrix} of dimensions \verb{n x n}, where \code{n} is the
number of nodes (sites). The output of \code{\link[=connectivity_matrix]{connectivity_matrix()}}.}

\item{y}{an edges weight \code{matrix} of dimensions \verb{n x n}, where \code{n} is the
number of nodes (sites). The output of \code{\link[=edges_weights_matrix]{edges_weights_matrix()}}.}
}
\value{
A spatial weights \code{matrix} of dimensions \verb{n x n}, where \code{n} is the
number of nodes (sites).
}
\description{
Creates a spatial weights matrix by multiplying an adjacency (connectivity)
matrix (see \code{\link[=connectivity_matrix]{connectivity_matrix()}}) and an edges weight matrix (see
\code{\link[=edges_weights_matrix]{edges_weights_matrix()}}). Resulting spatial weights equal to 0 will be
replaced by \verb{4 x max(w)}, where \code{max(w)} is the maximal weight in the
matrix.
}
\examples{
\dontrun{
# Import Adour sites ----
path_to_file <- system.file("extdata", "adour_sites_coords.csv", 
                            package = "chessboard")
adour_sites  <- read.csv(path_to_file)

# Convert sites to sf object (POINTS) ----
adour_sites_sf <- sf::st_as_sf(adour_sites, coords = 2:3, crs = "epsg:2154")

# Retrieve nodes (from nodes vector) ----
adour_nodes <- nodes_list(adour_sites$"site")

# Find edges with 1 degree of neighborhood (undirected) ----
adour_edges <- edges_list(adour_nodes)

# Get adjacency matrix ----
adour_adjacency <- adjacency_matrix(adour_edges)
adour_adjacency

# Compute distances between pairs of sites along the Adour river ----
adour_dists <- distance_euclidean(adour_sites_sf)

# Create Edges weight matrix ----
adour_weights <- edges_weight_matrix(adour_dists)
adour_weights

# Create Spatial weight matrix ----
spatial_weights_matrix(adour_adjacency, adour_weights)
}
}
